{"ast":null,"code":"var _jsxFileName = \"/Users/jackretterer/metaplex/js/packages/candy-machine-ui/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\nconst getCandyMachineId = () => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\n    return candyMachineId;\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'));\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSlopeWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], []); // let routes = useRoutes([\n  //   { path: \"/\", element: <Home/> },\n  //   { path: \"/home\", element: <Home/> },\n  //   { path: \"/team\", element: <Team/> },\n  //   // { path: \"/roadmap\", element: <Roadmap/> },\n  //   // { path: \"/gallery\", element: <Gallery/>},\n  // ]);\n  // return routes;\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              candyMachineId: candyMachineId,\n              connection: connection,\n              txTimeout: DEFAULT_TIMEOUT,\n              rpcHost: rpcHost,\n              network: network\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\n\nconst AppWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              candyMachineId: candyMachineId,\n              connection: connection,\n              txTimeout: DEFAULT_TIMEOUT,\n              rpcHost: rpcHost,\n              network: network\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AppWrapper;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"sources":["/Users/jackretterer/metaplex/js/packages/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","DEFAULT_TIMEOUT","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","BrowserRouter","Router","theme","palette","type","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","App","endpoint","wallets","AppWrapper"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport {Team} from './Team.js';\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\n    );\n\n    return candyMachineId;\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'),\n);\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [],\n  );\n\n    // let routes = useRoutes([\n    //   { path: \"/\", element: <Home/> },\n    //   { path: \"/home\", element: <Home/> },\n    //   { path: \"/team\", element: <Team/> },\n    //   // { path: \"/roadmap\", element: <Roadmap/> },\n    //   // { path: \"/gallery\", element: <Gallery/>},\n    // ]);\n    // return routes;\n    return (\n      <Router>\n        <ThemeProvider theme={theme}>\n          <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n              <WalletDialogProvider>\n                <Home\n                  candyMachineId={candyMachineId}\n                  connection={connection}\n                  txTimeout={DEFAULT_TIMEOUT}\n                  rpcHost={rpcHost}\n                  network={network}\n                />\n              </WalletDialogProvider>\n            </WalletProvider>\n          </ConnectionProvider>\n        </ThemeProvider>\n      </Router>\n    );\n};\n\nconst AppWrapper = () => {\n  return (\n    <Router>\n      <App />\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                connection={connection}\n                txTimeout={DEFAULT_TIMEOUT}\n                rpcHost={rpcHost}\n                network={network}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}