{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = void 0;\n\nconst react_1 = require(\"react\");\n\nconst R = __importStar(require(\"ramda\"));\n\nconst types_1 = require(\"../types\");\n\nconst logger_1 = __importDefault(require(\"../logger\"));\n\nconst useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'getGatekeeperRecord':\n      return Object.assign(Object.assign({}, state), {\n        gatewayStatus: types_1.GatewayStatus.CHECKING,\n        gatekeeperRecordState: undefined\n      });\n\n    case 'getGatekeeperRecord_failure':\n      return Object.assign(Object.assign({}, state), {\n        gatekeeperRecordState: action.gatekeeperRecord.state\n      });\n\n    case 'getGatekeeperRecord_success':\n      return Object.assign(Object.assign({}, state), {\n        gatekeeperRecordState: action.gatekeeperRecord.state,\n        civicPass: Object.assign(Object.assign({}, state.civicPass), {\n          requestPayload: action.gatekeeperRecord.payload\n        })\n      });\n\n    case 'getGatekeeperRecord_location_not_supported':\n    case 'getGatekeeperRecord_issued_location_not_supported':\n      return Object.assign(Object.assign({}, state), {\n        gatewayStatus: types_1.GatewayStatus.LOCATION_NOT_SUPPORTED,\n        gatekeeperRecordState: action.gatekeeperRecord.state,\n        civicPass: Object.assign(Object.assign({}, state.civicPass), {\n          requestPayload: action.gatekeeperRecord.payload\n        })\n      });\n\n    case 'getGatekeeperRecord_vpn_not_supported':\n    case 'getGatekeeperRecord_issued_vpn_not_supported':\n      return Object.assign(Object.assign({}, state), {\n        gatewayStatus: types_1.GatewayStatus.VPN_NOT_SUPPORTED,\n        gatekeeperRecordState: action.gatekeeperRecord.state,\n        civicPass: Object.assign(Object.assign({}, state.civicPass), {\n          requestPayload: action.gatekeeperRecord.payload\n        })\n      });\n\n    case 'getGatekeeperRecord_not_found':\n      return Object.assign(Object.assign({}, state), {\n        gatekeeperRecordState: action.gatekeeperRecord.state\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;\n\nconst useGetGatekeeperRecord = (_ref, state, dispatch) => {\n  let {\n    wallet,\n    gatekeeperClient,\n    httpConfig,\n    networkConfig\n  } = _ref;\n  const {\n    expectWalletConnected\n  } = (0, useWalletHooks_1.default)(wallet, state, dispatch);\n\n  const logDebug = function (message) {\n    let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return logger_1.default.debug(`[useGetGatekeeperRecord] ${message}`, obj);\n  };\n\n  const {\n    gatewayToken,\n    gatekeeperNetworkAddress\n  } = state;\n\n  const dispatchFetch = () => ({\n    type: 'getGatekeeperRecord'\n  });\n\n  const dispatchFailure = () => ({\n    type: 'getGatekeeperRecord_failure',\n    gatekeeperRecord: {\n      state: types_1.GatekeeperRecordState.SERVER_FAILURE,\n      payload: undefined\n    }\n  });\n\n  const dispatchSuccess = record => ({\n    type: 'getGatekeeperRecord_success',\n    gatekeeperRecord: record\n  });\n\n  const dispatchLocationNotSupported = record => ({\n    type: 'getGatekeeperRecord_location_not_supported',\n    gatekeeperRecord: record\n  });\n\n  const dispatchIssuedLocationNotSupported = record => ({\n    type: 'getGatekeeperRecord_issued_location_not_supported',\n    gatekeeperRecord: record\n  });\n\n  const dispatchVpnNotSupported = record => ({\n    type: 'getGatekeeperRecord_vpn_not_supported',\n    gatekeeperRecord: record\n  });\n\n  const dispatchIssuedVpnNotSupported = record => ({\n    type: 'getGatekeeperRecord_issued_vpn_not_supported',\n    gatekeeperRecord: record\n  });\n\n  const dispatchRecordNotFound = record => ({\n    type: 'getGatekeeperRecord_not_found',\n    gatekeeperRecord: record\n  });\n\n  const getAction = gatekeeperRecordState => {\n    const actions = {\n      [types_1.GatekeeperRecordState.REQUESTED]: () => dispatchSuccess(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.ISSUED]: () => dispatchSuccess(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.ISSUED_EXPIRED]: () => dispatchSuccess(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.ISSUED_EXPIRY_APPROACHING]: () => dispatchSuccess(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED]: () => dispatchIssuedLocationNotSupported(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.ISSUED_VPN_NOT_SUPPORTED]: () => dispatchIssuedVpnNotSupported(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.VPN_NOT_SUPPORTED]: () => dispatchVpnNotSupported(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED]: () => dispatchLocationNotSupported(gatekeeperRecordState),\n      [types_1.GatekeeperRecordState.NOT_REQUESTED]: () => dispatchRecordNotFound(gatekeeperRecordState)\n    };\n    return actions[gatekeeperRecordState.state];\n  };\n  /**\n   * Check to see if there is getGatekeeperRecord and dispatch actions based on the state of the record.\n   * If the service call fails dispatch a failure.\n   */\n\n\n  const dispatchGatekeeperRecord = async () => {\n    const walletAddress = expectWalletConnected();\n    logDebug('Fetching Gatekeeper record');\n    dispatch(dispatchFetch());\n\n    try {\n      const record = await gatekeeperClient().getGatekeeperRecordWithPayload(walletAddress.publicKey);\n      logDebug('Gatekeeper record response state: ', types_1.GatekeeperRecordState[record.state]);\n      const action = getAction(record);\n\n      if (!action) {\n        logger_1.default.error('Cannot dispatch action for invalid Gatekeeper Record State.', {\n          record\n        });\n        dispatch(dispatchFailure());\n        return;\n      }\n\n      dispatch(action());\n    } catch (error) {\n      logger_1.default.error('Failed to fetch Gatekeeper record', error);\n      dispatch(dispatchFailure());\n      throw error;\n    }\n  };\n\n  const useHttpConfigRef = newHttpConfig => {\n    const ref = (0, react_1.useRef)(); // We have to perform a deep equality check, otherwise useEffect will run every time the httpConfig object reference changes.\n\n    if (!R.equals(newHttpConfig, ref.current)) {\n      ref.current = newHttpConfig;\n    }\n\n    return ref.current;\n  };\n\n  (0, react_1.useEffect)(() => {\n    if (networkConfig.requiresGatekeeperRecordStatusCheck) {\n      dispatchGatekeeperRecord();\n    }\n  }, [gatewayToken === null || gatewayToken === void 0 ? void 0 : gatewayToken.state, gatewayToken === null || gatewayToken === void 0 ? void 0 : gatewayToken.expiryTime, gatekeeperNetworkAddress, useHttpConfigRef(httpConfig), networkConfig.requiresGatekeeperRecordStatusCheck]);\n  return {\n    dispatchGatekeeperRecord\n  };\n};\n\nexports.default = useGetGatekeeperRecord;","map":{"version":3,"sources":["/Users/jackretterer/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/useHooks/useGatekeeperRecord.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","reducer","react_1","require","R","types_1","logger_1","useWalletHooks_1","state","action","type","assign","gatewayStatus","GatewayStatus","CHECKING","gatekeeperRecordState","gatekeeperRecord","civicPass","requestPayload","payload","LOCATION_NOT_SUPPORTED","VPN_NOT_SUPPORTED","useGetGatekeeperRecord","dispatch","wallet","gatekeeperClient","httpConfig","networkConfig","expectWalletConnected","default","logDebug","message","obj","debug","gatewayToken","gatekeeperNetworkAddress","dispatchFetch","dispatchFailure","GatekeeperRecordState","SERVER_FAILURE","dispatchSuccess","record","dispatchLocationNotSupported","dispatchIssuedLocationNotSupported","dispatchVpnNotSupported","dispatchIssuedVpnNotSupported","dispatchRecordNotFound","getAction","actions","REQUESTED","ISSUED","ISSUED_EXPIRED","ISSUED_EXPIRY_APPROACHING","ISSUED_LOCATION_NOT_SUPPORTED","ISSUED_VPN_NOT_SUPPORTED","NOT_REQUESTED","dispatchGatekeeperRecord","walletAddress","getGatekeeperRecordWithPayload","publicKey","error","useHttpConfigRef","newHttpConfig","ref","useRef","equals","current","useEffect","requiresGatekeeperRecordStatusCheck","expiryTime"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reducer = void 0;\nconst react_1 = require(\"react\");\nconst R = __importStar(require(\"ramda\"));\nconst types_1 = require(\"../types\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'getGatekeeperRecord':\n            return Object.assign(Object.assign({}, state), { gatewayStatus: types_1.GatewayStatus.CHECKING, gatekeeperRecordState: undefined });\n        case 'getGatekeeperRecord_failure':\n            return Object.assign(Object.assign({}, state), { gatekeeperRecordState: action.gatekeeperRecord.state });\n        case 'getGatekeeperRecord_success':\n            return Object.assign(Object.assign({}, state), { gatekeeperRecordState: action.gatekeeperRecord.state, civicPass: Object.assign(Object.assign({}, state.civicPass), { requestPayload: action.gatekeeperRecord.payload }) });\n        case 'getGatekeeperRecord_location_not_supported':\n        case 'getGatekeeperRecord_issued_location_not_supported':\n            return Object.assign(Object.assign({}, state), { gatewayStatus: types_1.GatewayStatus.LOCATION_NOT_SUPPORTED, gatekeeperRecordState: action.gatekeeperRecord.state, civicPass: Object.assign(Object.assign({}, state.civicPass), { requestPayload: action.gatekeeperRecord.payload }) });\n        case 'getGatekeeperRecord_vpn_not_supported':\n        case 'getGatekeeperRecord_issued_vpn_not_supported':\n            return Object.assign(Object.assign({}, state), { gatewayStatus: types_1.GatewayStatus.VPN_NOT_SUPPORTED, gatekeeperRecordState: action.gatekeeperRecord.state, civicPass: Object.assign(Object.assign({}, state.civicPass), { requestPayload: action.gatekeeperRecord.payload }) });\n        case 'getGatekeeperRecord_not_found':\n            return Object.assign(Object.assign({}, state), { gatekeeperRecordState: action.gatekeeperRecord.state });\n        default:\n            return state;\n    }\n};\nexports.reducer = reducer;\nconst useGetGatekeeperRecord = ({ wallet, gatekeeperClient, httpConfig, networkConfig, }, state, dispatch) => {\n    const { expectWalletConnected } = (0, useWalletHooks_1.default)(wallet, state, dispatch);\n    const logDebug = (message, obj = null) => logger_1.default.debug(`[useGetGatekeeperRecord] ${message}`, obj);\n    const { gatewayToken, gatekeeperNetworkAddress } = state;\n    const dispatchFetch = () => ({\n        type: 'getGatekeeperRecord',\n    });\n    const dispatchFailure = () => ({\n        type: 'getGatekeeperRecord_failure',\n        gatekeeperRecord: { state: types_1.GatekeeperRecordState.SERVER_FAILURE, payload: undefined },\n    });\n    const dispatchSuccess = (record) => ({\n        type: 'getGatekeeperRecord_success',\n        gatekeeperRecord: record,\n    });\n    const dispatchLocationNotSupported = (record) => ({\n        type: 'getGatekeeperRecord_location_not_supported',\n        gatekeeperRecord: record,\n    });\n    const dispatchIssuedLocationNotSupported = (record) => ({\n        type: 'getGatekeeperRecord_issued_location_not_supported',\n        gatekeeperRecord: record,\n    });\n    const dispatchVpnNotSupported = (record) => ({\n        type: 'getGatekeeperRecord_vpn_not_supported',\n        gatekeeperRecord: record,\n    });\n    const dispatchIssuedVpnNotSupported = (record) => ({\n        type: 'getGatekeeperRecord_issued_vpn_not_supported',\n        gatekeeperRecord: record,\n    });\n    const dispatchRecordNotFound = (record) => ({\n        type: 'getGatekeeperRecord_not_found',\n        gatekeeperRecord: record,\n    });\n    const getAction = (gatekeeperRecordState) => {\n        const actions = {\n            [types_1.GatekeeperRecordState.REQUESTED]: () => dispatchSuccess(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.ISSUED]: () => dispatchSuccess(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.ISSUED_EXPIRED]: () => dispatchSuccess(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.ISSUED_EXPIRY_APPROACHING]: () => dispatchSuccess(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED]: () => dispatchIssuedLocationNotSupported(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.ISSUED_VPN_NOT_SUPPORTED]: () => dispatchIssuedVpnNotSupported(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.VPN_NOT_SUPPORTED]: () => dispatchVpnNotSupported(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED]: () => dispatchLocationNotSupported(gatekeeperRecordState),\n            [types_1.GatekeeperRecordState.NOT_REQUESTED]: () => dispatchRecordNotFound(gatekeeperRecordState),\n        };\n        return actions[gatekeeperRecordState.state];\n    };\n    /**\n     * Check to see if there is getGatekeeperRecord and dispatch actions based on the state of the record.\n     * If the service call fails dispatch a failure.\n     */\n    const dispatchGatekeeperRecord = async () => {\n        const walletAddress = expectWalletConnected();\n        logDebug('Fetching Gatekeeper record');\n        dispatch(dispatchFetch());\n        try {\n            const record = await gatekeeperClient().getGatekeeperRecordWithPayload(walletAddress.publicKey);\n            logDebug('Gatekeeper record response state: ', types_1.GatekeeperRecordState[record.state]);\n            const action = getAction(record);\n            if (!action) {\n                logger_1.default.error('Cannot dispatch action for invalid Gatekeeper Record State.', { record });\n                dispatch(dispatchFailure());\n                return;\n            }\n            dispatch(action());\n        }\n        catch (error) {\n            logger_1.default.error('Failed to fetch Gatekeeper record', error);\n            dispatch(dispatchFailure());\n            throw error;\n        }\n    };\n    const useHttpConfigRef = (newHttpConfig) => {\n        const ref = (0, react_1.useRef)();\n        // We have to perform a deep equality check, otherwise useEffect will run every time the httpConfig object reference changes.\n        if (!R.equals(newHttpConfig, ref.current)) {\n            ref.current = newHttpConfig;\n        }\n        return ref.current;\n    };\n    (0, react_1.useEffect)(() => {\n        if (networkConfig.requiresGatekeeperRecordStatusCheck) {\n            dispatchGatekeeperRecord();\n        }\n    }, [\n        gatewayToken === null || gatewayToken === void 0 ? void 0 : gatewayToken.state,\n        gatewayToken === null || gatewayToken === void 0 ? void 0 : gatewayToken.expiryTime,\n        gatekeeperNetworkAddress,\n        useHttpConfigRef(httpConfig),\n        networkConfig.requiresGatekeeperRecordStatusCheck,\n    ]);\n    return { dispatchGatekeeperRecord };\n};\nexports.default = useGetGatekeeperRecord;\n"]},"metadata":{},"sourceType":"script"}